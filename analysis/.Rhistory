separate(sample, into=c("well", "template_cyp", "sample"), sep="_")
cyp2c9_to_cyp2c19$sample_list <- str_replace_all(cyp2c9_to_cyp2c19$sample, pattern="-", replacement=",")
cyp2c9_to_cyp2c19$sample_list <- str_split(cyp2c9_to_cyp2c19$sample_list, pattern=",")
num_vars=c()
for(row in cyp2c9_to_cyp2c19$sample_list){
num_vars = c(num_vars, length(row))
}
cyp2c9_to_cyp2c19$num_vars = num_vars
cyp2c9_to_cyp2c19_2c19_wt <- cyp2c9_to_cyp2c19$geometric_mean[which((cyp2c9_to_cyp2c19$sample == "WT") & cyp2c9_to_cyp2c19$template_cyp == "2C19")]
cyp2c9_to_cyp2c19_2c9_wt <- cyp2c9_to_cyp2c19$geometric_mean[which((cyp2c9_to_cyp2c19$sample == "WT") & cyp2c9_to_cyp2c19$template_cyp == "2C9")]
cyp2c9_to_cyp2c19 <- cyp2c9_to_cyp2c19 %>%
mutate(mean_norm = case_when(template_cyp == "2C19" ~ geometric_mean / cyp2c9_to_cyp2c19_2c19_wt,
template_cyp == "2C9" ~ geometric_mean / cyp2c9_to_cyp2c19_2c9_wt))
variant_order <- c("241-288-289", "288-289","241-289","241-288","289","288","241","WT")
cyp2c9_to_cyp2c19 <- cyp2c9_to_cyp2c19 %>%
mutate(sample = fct_relevel(sample, variant_order))
colors <- list("2C9" = "#D55E00",
"2C19" = "#0072B2")
swaps_plot_legend <- ggplot(cyp2c9_to_cyp2c19, aes(x=fct_rev(sample), y=mean_norm, fill=template_cyp))+
geom_col(position="dodge")+
labs(y="Fluorescence\n(GFP:mCherry)",
x="Substituted position",
fill="Template CYP")+
facet_wrap(~ template_cyp)+
scale_fill_manual(values=colors)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
legend.position = "top",
strip.text = element_text(size=18))
swaps_plot <- swaps_plot_legend+
theme(legend.position="none")
# swaps_plot
# ggsave("../figures/cyp2c9_to_cyp2c19/eachWt_norm.png", height=7, width=14, plot=swaps_plot)
# ggsave("../figures/cyp2c9_to_cyp2c19/eachWt_norm.svg", height=7, width=14, plot=swaps_plot)
swaps_legend <- cowplot::get_legend(swaps_plot_legend)
ggsave("../figures/swaps_legend.png", height=1, width=5, plot=swaps_legend)
ggsave("../figures/swaps_legend.svg", height=1, width=5, plot=swaps_legend)
fig4_layout <- "
1111#
2222#
#####
#####
33333
"
fig4 <- stacked/swaps_plot+
plot_layout(design=fig4_layout)
# fig4
ggsave("../figures/fig4.png", plot=fig4, height=16, width=14, unit="in")
ggsave("../figures/fig4.svg", plot=fig4, height=16, width=14, unit="in")
gnomad_2c19 <- read_csv("../data/gnomAD_v2.1.1_ENSG00000165841_2022_05_16_15_27_47.csv") %>%
dplyr::select("rsIDs", "Protein Consequence", "VEP Annotation", "Source","Allele Frequency", "ClinVar Clinical Significance") %>%
drop_na("Protein Consequence") %>%
filter(`VEP Annotation` == "missense_variant")
gnomad_2c19$`Protein Consequence` <- str_replace_all(gnomad_2c19$`Protein Consequence`,
c(
"Ala"="A", "Arg" ="R", "Asn"="N", "Asp"="D",
"Cys"="C", "Glu"="E", "Gln"="Q", "Gly"="G",
"His"="H", "Ile"="I", "Leu"="L", "Lys"="K",
"Met"="M", "Phe"="F", "Pro"="P", "Ser"="S",
"Thr"="T", "Trp"="W", "Tyr"="Y", "Val"="V",
"Ter"="X"
)
)
cpic_2c19_names <- read_csv("../data/cpic_allele_def.csv")
clin_cyp2c19 <- left_join(gnomad_2c19, cpic_2c19_names, by=c("Protein Consequence" = "var"))
gnomad_2c19 <- read_csv("../data/gnomAD_v2.1.1_ENSG00000165841_2022_05_16_15_27_47.csv") %>%
dplyr::select("rsIDs", "Protein Consequence", "VEP Annotation", "Source","Allele Frequency", "ClinVar Clinical Significance") %>%
drop_na("Protein Consequence") %>%
filter(`VEP Annotation` == "missense_variant")
gnomad_2c19$`Protein Consequence` <- str_replace_all(gnomad_2c19$`Protein Consequence`,
c(
"Ala"="A", "Arg" ="R", "Asn"="N", "Asp"="D",
"Cys"="C", "Glu"="E", "Gln"="Q", "Gly"="G",
"His"="H", "Ile"="I", "Leu"="L", "Lys"="K",
"Met"="M", "Phe"="F", "Pro"="P", "Ser"="S",
"Thr"="T", "Trp"="W", "Tyr"="Y", "Val"="V",
"Ter"="X"
)
)
cpic_2c19_names <- read_csv("../data/cpic_allele_def.csv")
clin_cyp2c19 <- left_join(gnomad_2c19, cpic_2c19_names, by=c("Protein Consequence" = "var"))
gnomad_2c19 <- read_csv("../data/gnomAD_v2.1.1_ENSG00000165841_2022_05_16_15_27_47.csv") %>%
dplyr::select("rsIDs", "Protein Consequence", "VEP Annotation", "Source","Allele Frequency", "ClinVar Clinical Significance") %>%
drop_na("Protein Consequence") %>%
filter(`VEP Annotation` == "missense_variant")
gnomad_2c19$`Protein Consequence` <- str_replace_all(gnomad_2c19$`Protein Consequence`,
c(
"Ala"="A", "Arg" ="R", "Asn"="N", "Asp"="D",
"Cys"="C", "Glu"="E", "Gln"="Q", "Gly"="G",
"His"="H", "Ile"="I", "Leu"="L", "Lys"="K",
"Met"="M", "Phe"="F", "Pro"="P", "Ser"="S",
"Thr"="T", "Trp"="W", "Tyr"="Y", "Val"="V",
"Ter"="X"
)
)
cpic_2c19_names <- read_csv("../data/cpic_allele_def.csv")
clin_cyp2c19 <- left_join(gnomad_2c19, cpic_2c19_names, by=c("Protein Consequence" = "var"))
CYP2C19_data <- read_csv("../data/CYP2C19_data.csv")
CYP2C19_clin <- left_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin_full <- full_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin <- CYP2C19_clin  %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
))
CYP2C19_clin_full <- CYP2C19_clin_full %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
),
in_df = case_when(
(!is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "both",
(!is.na(`VEP Annotation`) & is.na(abundance_score)) ~ "gnomad_only",
(is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "dms_only"
))
write_csv(CYP2C19_clin_full, "../data/CYP2C19_clinical_data.csv")
# CYP2C19_clin <- left_join(CYP2C19_clin, clinvar_cyp2c19, by=c("variant" = "Protein change"))
CYP2C19_data <- read_csv("../data/CYP2C19_data_detailed.csv")
CYP2C19_clin <- left_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin_full <- full_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin <- CYP2C19_clin  %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
))
CYP2C19_clin_full <- CYP2C19_clin_full %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
),
in_df = case_when(
(!is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "both",
(!is.na(`VEP Annotation`) & is.na(abundance_score)) ~ "gnomad_only",
(is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "dms_only"
))
write_csv(CYP2C19_clin_full, "../data/CYP2C19_clinical_data.csv")
# CYP2C19_clin <- left_join(CYP2C19_clin, clinvar_cyp2c19, by=c("variant" = "Protein change"))
CYP2C19_clin <- read_csv("../data/CYP2C19_clinical_data.csv") %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
class_order <- list("nonsense-like" = "nonsense-like",
"possibly_nonsense-like" = "possibly nonsense-like",
"decreased"="decreased",
"possibly_decreased" = "possibly decreased",
"possibly_wt-like" = "possibly wt-like",
"wt-like"="wt-like",
"no_annotation" = "no annotation")
CYP2C19_clin_counts <- CYP2C19_clin %>%
group_by(classification, in_df) %>%
filter(in_df != "dms_only") %>%
summarise(count=n()) %>%
mutate(classification = factor(classification, levels=names(class_order)))
CYP2C19_clin_counts_total <- CYP2C19_clin %>%
filter(in_df != "dms_only") %>%
group_by(classification) %>%
summarise(count=n())
custom_colorscale = c("nonsense-like" = "#BB00FF","possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_decreased" = "#b3d9ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D","increased" = "orange","no_annotation" = "grey75")
write_csv(CYP2C19_clin_full, "../data/CYP2C19_clinical_data.csv")
CYP2C19_clin <- read_csv("../data/CYP2C19_clinical_data.csv") %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
class_order <- list("nonsense-like" = "nonsense-like",
"possibly_nonsense-like" = "possibly nonsense-like",
"decreased"="decreased",
"possibly_decreased" = "possibly decreased",
"possibly_wt-like" = "possibly wt-like",
"wt-like"="wt-like",
"no_annotation" = "no annotation")
CYP2C19_clin <- read_csv("../data/CYP2C19_clinical_data.csv") %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
View(CYP2C19_clin_full)
View(CYP2C19_data)
CYP2C19_data_detailed <- left_join(comb_scores, scores_reps_untidy, by=c("variant", "type"))
# Cutoff at 5th percentile of synonymous distribution
synonymous_lowest = quantile(subset(CYP2C19_data, type == "synonymous")$abundance_score, probs = 0.05, na.rm = TRUE)
# Cutoff at 95th percentile of synonymous distribution
synonymous_highest = quantile(subset(CYP2C19_data, type == "synonymous")$abundance_score, probs = 0.95, na.rm = TRUE)
# Cutoff at 95th percentile of nonsense distribution
nonsense_highest = quantile(subset(CYP2C19_data, type == "nonsense")$abundance_score, 0.95, na.rm = TRUE)
# nonsense-like = the value AND upper ci is below 95th nonsense percentile
# possibly_nonsense-like =  If the value but not the CI is below 95th nonsense percentile
# decreased = upper ci is below 5th percentile of synonymous
# possibly_decreased = value but not upper ci is below 5th percentile of synonymous
# possibly_wt-like = value but not lower ci is above 5th percentile of syn
# wt-like = lower ci is above 5th percentile of syn
# increased = lower ci is above 95th percentile of syn
# If there is only one value for abundance_score (i.e. a CI can't be calculated and is therefore NA) then put it in the appropriate "possibly" category
CYP2C19_data_detailed <- CYP2C19_data_detailed %>%
mutate(classification = case_when(ci_upper <= nonsense_highest ~ "nonsense-like",
(abundance_score <= nonsense_highest) & (ci_upper > nonsense_highest) ~ "possibly_nonsense-like",
ci_upper <= synonymous_lowest ~ "decreased",
(abundance_score <= synonymous_lowest) & (ci_upper > synonymous_lowest) ~ "possibly_decreased",
(abundance_score >= synonymous_lowest) & (ci_lower < synonymous_lowest) ~ "possibly_wt-like",
ci_lower >= synonymous_lowest ~ "wt-like",
ci_lower >= synonymous_highest ~ "increased",
(abundance_score <= nonsense_highest) & is.na(ci_upper) ~ "possibly_nonsense-like",
(abundance_score <= synonymous_lowest) & is.na(ci_upper) ~ "possibly_decreased",
(abundance_score >= synonymous_lowest) & is.na(ci_lower) ~ "possibly_wt-like"
))
write_csv(CYP2C19_data_detailed, "../data/CYP2C19_data_detailed.csv")
CYP2C19_data <- read_csv("../data/CYP2C19_data_detailed.csv")
CYP2C19_clin <- left_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin_full <- full_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin <- CYP2C19_clin  %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
))
CYP2C19_clin_full <- CYP2C19_clin_full %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
),
in_df = case_when(
(!is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "both",
(!is.na(`VEP Annotation`) & is.na(abundance_score)) ~ "gnomad_only",
(is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "dms_only"
))
write_csv(CYP2C19_clin_full, "../data/CYP2C19_clinical_data.csv")
# CYP2C19_clin <- left_join(CYP2C19_clin, clinvar_cyp2c19, by=c("variant" = "Protein change"))
CYP2C19_clin <- read_csv("../data/CYP2C19_clinical_data.csv") %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
class_order <- list("nonsense-like" = "nonsense-like",
"possibly_nonsense-like" = "possibly nonsense-like",
"decreased"="decreased",
"possibly_decreased" = "possibly decreased",
"possibly_wt-like" = "possibly wt-like",
"wt-like"="wt-like",
"no_annotation" = "no annotation")
CYP2C19_clin_counts <- CYP2C19_clin %>%
group_by(classification, in_df) %>%
filter(in_df != "dms_only") %>%
summarise(count=n()) %>%
mutate(classification = factor(classification, levels=names(class_order)))
CYP2C19_clin_counts_total <- CYP2C19_clin %>%
filter(in_df != "dms_only") %>%
group_by(classification) %>%
summarise(count=n())
custom_colorscale = c("nonsense-like" = "#BB00FF","possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_decreased" = "#b3d9ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D","increased" = "orange","no_annotation" = "grey75")
gnomad_plot <- ggplot(CYP2C19_clin_counts, aes(x=classification, y=count, fill=in_df))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count, fill=NA),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
legend.position="top")
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "dms_only"), aes(x=classification, y=count, fill=in_df))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count, fill=NA),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
legend.position="top")
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "dms_only"), aes(x=classification, y=count))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count, fill=NA),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
legend.position="top")
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "dms_only"), aes(x=classification, y=count))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=countA),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
legend.position="top")
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "dms_only"), aes(x=classification, y=count))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
legend.position="top")
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
CYP2C19_stars <- CYP2C19_clin %>% drop_na(`Allele Clinical Functional Status (Required)`) %>% unique()
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "dms_only"), aes(x=classification, y=count))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
gnomad_plot
View(CYP2C19_clin_counts)
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count),
vjust=-0.2)+
scale_fill_manual(name="",
labels = c("present in both", "gnomAD only"),
values=c("both"= "#0072B2",
"gnomad_only" = "grey75"))+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
View(CYP2C19_clin_counts)
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count, fill="#0072B2"))+
geom_col()+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count),
vjust=-0.2)+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count),
vjust=-0.2)+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
CYP2C19_clin <- read_csv("../data/CYP2C19_clinical_data.csv") %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
class_order <- list("nonsense-like" = "nonsense-like",
"possibly_nonsense-like" = "possibly nonsense-like",
"decreased"="decreased",
"possibly_decreased" = "possibly decreased",
"possibly_wt-like" = "possibly wt-like",
"wt-like"="wt-like")
CYP2C19_clin_counts <- CYP2C19_clin %>%
group_by(classification, in_df) %>%
filter(in_df != "dms_only") %>%
summarise(count=n()) %>%
mutate(classification = factor(classification, levels=names(class_order)))
CYP2C19_clin_counts_total <- CYP2C19_clin %>%
filter(in_df != "dms_only") %>%
group_by(classification) %>%
summarise(count=n())
custom_colorscale = c("nonsense-like" = "#BB00FF","possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_decreased" = "#b3d9ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D","increased" = "orange")
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts_total, aes(label=count),
vjust=-0.2)+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts_total %>% filter(in_df == "both"), aes(label=count),
vjust=-0.2)+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
View(CYP2C19_clin_counts_total)
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts_total %>% filter(classification != "no_annotation"), aes(label=count),
vjust=-0.2)+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts_total %>% filter(classification != "no_annotation"), aes(label=count),
vjust=-0.2)+
scale_x_discrete(labels = class_order)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title = element_blank(),
legend.position="top")
gnomad_plot
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
CYP2C19_stars <- CYP2C19_clin %>% drop_na(`Allele Clinical Functional Status (Required)`) %>% unique()
custom_colorscale = c("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale)+
labs(x="Allele Clinical Functional Status",
y="Abundance Score")+
theme(axis.text.x = element_text(angle=45, vjust=0.5))
star_plot
ggsave("../figures/cpic_classification_dots.png", height=8,width=10, plot=star_plot)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=0.5),
axis.title = element_blank())
star_plot
custom_colorscale = c("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=0.5),
axis.title = element_blank())
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=0.5),
axis.title.x = element_blank())
star_plot
custom_colorscale = list("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
custom_colorscale = list("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=0.5),
axis.title.x = element_blank())
star_plot
ggsave("../figures/cpic_classification_dots.png", height=8,width=10, plot=star_plot)
View(CYP2C19_stars)
View(CYP2C19_clin)
CYP2C19_clin <- read_csv("../data/CYP2C19_clinical_data.csv") %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
View(CYP2C19_clin)
View(CYP2C19_clin)
View(clin_cyp2c19)
View(CYP2C19_stars)
View(CYP2C19_clin)
CYP2C19_stars <- CYP2C19_clin %>% drop_na(star_allele) %>% unique()
View(CYP2C19_stars)
View(CYP2C19_clin)
CYP2C19_data <- read_csv("../data/CYP2C19_data_detailed.csv")
CYP2C19_clin <- left_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
View(CYP2C19_clin)
