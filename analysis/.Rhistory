View(mDMS_heatmap_df_shifts_position_mean)
View(rollsumOfMean)
View(mDMS_heatmap_df_shifts_position_mean)
View(mDMS_heatmap_df_shifts_position_mean)
mDMS_heatmap_df_shifts_position_mean <- mDMS_df_shifts %>%
group_by(position, conservation) %>%
summarise(mean_shift = mean(S_C19))
rollsumOfMean <- data.frame(rolling_sum = rollsum(mDMS_heatmap_df_shifts_position_mean$mean_shift, k=5, fill=NA),
position = mDMS_heatmap_df_shifts_position_mean$position)
rollsumofmean_plot <- ggplot(mDMS_heatmap_df_shifts_position_mean, aes(x=position, y=mean_shift))+
geom_line(data=rollsumOfMean, mapping=aes(x=position, y=rolling_sum), color="black", size=1.5, alpha=0.5)+
# geom_line(data=srs_tall_rollsumOfMean, mapping=aes(x=position, y=roll), color="orange", size=1.5, alpha=0.5)+
geom_point(size=3, alpha=0.65)+
geom_point(data=FDR_corrected %>% filter(mean_shift > 0), color="red")+
geom_point(data=FDR_corrected %>% filter(mean_shift < 0), color="blue")+
scale_x_continuous(breaks = c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 490),
expand = c(0,0),
limits=c(1,490)) +
geom_hline(yintercept=0)+
labs(x="position",
y="mean shift value")+
theme_minimal(base_size=18)+
theme(plot.margin = margin(0,0.5,0,0, "cm"),
legend.position = "none")
rollsumofmean_plot
ggsave(plot=rollsumofmean_plot, "../figures/rollsum/rollsumOfMean_k4.png", height=4, width=18)
ggsave(plot=rollsumofmean_plot, "../figures/rollsum/rollsumOfMean_k5.png", height=4, width=18)
design_layout <- "
11111#22222
3333333333#
44444444444
"
fig3 <- corrplot_2C19_2C9+shift_density_no0+comb_roll+fig3_bot+plot_layout(design=design_layout)
fig3
ggsave(plot=fig3, "../figures/fig3.png", height=16, width=12.5, unit="in")
ggsave(plot=fig3, "../figures/fig3.svg", height=16, width=12.5, unit="in")
ggsave(plot=fig3, "../figures/fig3.svg", height=16, width=12.5, unit="in")
fig3_bot <- k_boxplot+shifts_in_SRS_heme_plot+in_srs_comb_plot
fig3_bot
comb_roll <- horiz_ss_plot/srs_plot/rollsumofmean_plot+plot_layout(heights=c(0.2,0.2, 3))+
theme(plot.margin = margin(0.5,1,0,0))
comb_roll
fig3_bot <- k_boxplot+shifts_in_SRS_heme_plot+in_srs_comb_plot
ggsave("../figures/fig3_bottom.png", height=6, width=15, unit="in", plot=fig3_bot)
fig3 <- corrplot_2C19_2C9+shift_density_no0+comb_roll+fig3_bot+plot_layout(design=design_layout)
fig3
ggsave(plot=fig3, "../figures/fig3.png", height=16, width=12.5, unit="in")
ggsave(plot=fig3, "../figures/fig3.svg", height=16, width=12.5, unit="in")
### Mean
pymol_mean <- mDMS_heatmap_df_shifts_position_mean %>%
select(position, mean_shift) %>%
unique()
all_pos_df <- data.frame(position=seq(1,490,1))
pymol_mean <- left_join(all_pos_df, pymol_mean, by="position")
pymol_mean$mean_shift = replace_na(pymol_mean$mean_shift, replace=mean(pymol_mean$mean_shift %>% na.omit)
)
write_lines(pymol_mean$mean,"../pymol_mean.txt", sep = "\n")
### Rolling sum of mean
pymol_rollsumOfMean <- rollsumOfMean %>%
select(position, rolling_sum) %>%
unique()
all_pos_df <- data.frame(position=seq(1,490,1))
pymol_rollsumOfMean <- left_join(all_pos_df, pymol_rollsumOfMean, by="position")
pymol_rollsumOfMean$rolling_sum = replace_na(pymol_rollsumOfMean$rolling_sum, replace=mean(pymol_rollsumOfMean$rolling_sum %>% na.omit)
)
write_lines(pymol_rollsumOfMean$rolling_sum,"../pymol_rollsumOfMean.txt", sep = "\n")
View(pymol_rollsumOfMean)
View(pymol_rollsumOfMean)
View(pymol_rollsumOfMean)
### Mean
pymol_mean <- mDMS_heatmap_df_shifts_position_mean %>%
select(position, mean_shift) %>%
unique()
all_pos_df <- data.frame(position=seq(1,490,1))
pymol_mean <- left_join(all_pos_df, pymol_mean, by="position")
pymol_mean$mean_shift = replace_na(pymol_mean$mean_shift, replace=mean(pymol_mean$mean_shift %>% na.omit)
)
write_lines(pymol_mean$mean,"../pymol_mean.txt", sep = "\n")
### Rolling sum of mean
pymol_rollsumOfMean <- rollsumOfMean %>%
select(position, rolling_sum) %>%
unique()
all_pos_df <- data.frame(position=seq(1,490,1))
pymol_rollsumOfMean <- left_join(all_pos_df, pymol_rollsumOfMean, by="position")
pymol_rollsumOfMean$rolling_sum = replace_na(pymol_rollsumOfMean$rolling_sum, replace=mean(pymol_rollsumOfMean$rolling_sum %>% na.omit)
)
write_lines(pymol_rollsumOfMean$rolling_sum,"../pymol_rollsumOfMean.txt", sep = "\n")
### Mean
pymol_mean <- mDMS_heatmap_df_shifts_position_mean %>%
select(position, mean_shift) %>%
unique()
all_pos_df <- data.frame(position=seq(29,490,1))
pymol_mean <- left_join(all_pos_df, pymol_mean, by="position")
pymol_mean$mean_shift = replace_na(pymol_mean$mean_shift, replace=mean(pymol_mean$mean_shift %>% na.omit)
)
write_lines(pymol_mean$mean,"../pymol_mean_4gqs.txt", sep = "\n")
### Rolling sum of mean
pymol_rollsumOfMean <- rollsumOfMean %>%
select(position, rolling_sum) %>%
unique()
all_pos_df <- data.frame(position=seq(29,490,1))
pymol_rollsumOfMean <- left_join(all_pos_df, pymol_rollsumOfMean, by="position")
pymol_rollsumOfMean$rolling_sum = replace_na(pymol_rollsumOfMean$rolling_sum, replace=mean(pymol_rollsumOfMean$rolling_sum %>% na.omit)
)
write_lines(pymol_rollsumOfMean$rolling_sum,"../pymol_rollsumOfMean_4gqs.txt", sep = "\n")
## tidyverse 1.3.2 for ggplot, dplyr, data manipulation
if (!require(tidyverse)) install.packages('tidyverse')
library(tidyverse)
## gridExtra 2.3
if (!require(gridExtra)) install.packages('gridExtra')
library(gridExtra)
## cowplot 1.1.1 for separate plotting of legends
if (!require(cowplot)) install.packages('cowplot')
library(cowplot)
## ggrepel 0.9.1 for labeling points on plots
if (!require(ggrepel)) install.packages('ggrepel')
library(ggrepel)
## pheatmap 1.0.12 for hierarchical clustering and clustered heatmaps
if (!require(pheatmap)) install.packages('pheatmap')
library(pheatmap)
## GGally 2.1.2 for complex correlation plots
if (!require(GGally)) install.packages('GGally')
library(GGally)
## patchwork 1.1.1 for combining multiple plots
if (!require(patchwork)) install.packages('patchwork')
library(patchwork)
## zoo_1.8-10
if (!require(zoo)) install.packages('zoo')
library(zoo)
## ggpointdensity 0.1.0 for dot plots with density coloration
if (!require(ggpointdensity)) install.packages('ggpointdensity')
library(ggpointdensity)
## ggpubr 0.4.0 for correlation stats
if (!require(ggpubr)) install.packages('ggpubr')
library(ggpubr)
## ggdendro_0.1.23 for plotting dendrograms
if (!require(ggdendro)) install.packages('ggdendro')
library(ggdendro)
if (!require(ggplotify)) install.packages('ggplotify')
library(ggplotify)
theme_new = theme_set(theme_minimal(base_size=18))+
theme(axis.text.x= element_text(size=20),
axis.text.y = element_text(size=20))
# Define colorblind palette
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# Colors for homologous or divergent WT amino acids
# between CYP2C19 and 2C9
conserv_color <- list(homologous="#CC6666",
divergent="#9999CC")
colors <- list("CYP2C9" = "#D55E00",
"CYP2C19" = "#0072B2")
scatterplot_correlation_fxn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point(alpha = 0.05)
p
}
View(FDR_corrected)
View(FDR_corrected)
rollsumofmean_plot <- ggplot(mDMS_heatmap_df_shifts_position_mean, aes(x=position, y=mean_shift))+
# geom_line(data=rollsumOfMean, mapping=aes(x=position, y=rolling_sum), color="black", size=1.5, alpha=0.5)+
# geom_line(data=srs_tall_rollsumOfMean, mapping=aes(x=position, y=roll), color="orange", size=1.5, alpha=0.5)+
geom_point(size=3, alpha=0.65)+
geom_point(data=FDR_corrected %>% filter(mean_shift > 0), color="red")+
geom_point(data=FDR_corrected %>% filter(mean_shift < 0), color="blue")+
scale_x_continuous(breaks = c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 490),
expand = c(0,0),
limits=c(1,490)) +
geom_hline(yintercept=0)+
labs(x="position",
y="mean shift value")+
theme_minimal(base_size=18)+
theme(plot.margin = margin(0,0.5,0,0, "cm"),
legend.position = "none")
rollsumofmean_plot
ggsave(plot=rollsumofmean_plot, "../figures/multidms_posmean_fdr.png", height=4, width=18)
comb_roll <- horiz_ss_plot/srs_plot/rollsumofmean_plot+plot_layout(heights=c(0.2,0.2, 3))+
theme(plot.margin = margin(0.5,1,0,0))
comb_roll
design_layout <- "
11111#22222
3333333333#
44444444444
"
fig3 <- corrplot_2C19_2C9+shift_density_no0+comb_roll+fig3_bot+plot_layout(design=design_layout)
fig3
ggsave(plot=fig3, "../figures/fig3.png", height=16, width=12.5, unit="in")
ggsave(plot=fig3, "../figures/fig3.svg", height=16, width=12.5, unit="in")
gnomad_2c19 <- read_csv("../data/gnomAD_v2.1.1_ENSG00000165841_2022_05_16_15_27_47.csv") %>%
dplyr::select("rsIDs", "Protein Consequence", "VEP Annotation", "Source","Allele Frequency", "ClinVar Clinical Significance") %>%
drop_na("Protein Consequence") %>%
filter(`VEP Annotation` == "missense_variant")
gnomad_2c19$`Protein Consequence` <- str_replace_all(gnomad_2c19$`Protein Consequence`,
c(
"Ala"="A", "Arg" ="R", "Asn"="N", "Asp"="D",
"Cys"="C", "Glu"="E", "Gln"="Q", "Gly"="G",
"His"="H", "Ile"="I", "Leu"="L", "Lys"="K",
"Met"="M", "Phe"="F", "Pro"="P", "Ser"="S",
"Thr"="T", "Trp"="W", "Tyr"="Y", "Val"="V",
"Ter"="X"
)
)
cpic_2c19_names <- read_csv("../data/cpic_allele_def.csv")
clin_cyp2c19 <- left_join(gnomad_2c19, cpic_2c19_names, by=c("Protein Consequence" = "var"))
CYP2C19_data <- read_csv("../data/CYP2C19_data.csv")
CYP2C19_clin <- left_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin_full <- full_join(CYP2C19_data, clin_cyp2c19, by=c("variant" = "Protein Consequence"))
CYP2C19_clin <- CYP2C19_clin  %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
))
CYP2C19_clin_full <- CYP2C19_clin_full %>%
mutate(clinical_functional_annotation = case_when(
is.na(`Allele Clinical Functional Status (Required)`) ~ "no_annotation",
TRUE ~ `Allele Clinical Functional Status (Required)`
),
in_df = case_when(
(!is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "both",
(!is.na(`VEP Annotation`) & is.na(abundance_score)) ~ "gnomad_only",
(is.na(`VEP Annotation`) & !is.na(abundance_score)) ~ "dms_only"
))
CYP2C19_clin_full <- CYP2C19_clin_full %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
class_order_capitol <- list("nonsense-like" = "Nonsense-like",
"possibly_nonsense-like" = "Possibly nonsense-like",
"decreased"="Decreased",
"possibly_decreased" = "Possibly decreased",
"possibly_wt-like" = "Possibly WT-like",
"wt-like"="WT-like")
CYP2C19_clin_counts <- CYP2C19_clin_full %>%
group_by(classification, in_df) %>%
filter(in_df != "dms_only") %>%
summarise(count=n()) %>%
mutate(classification = factor(classification, levels=names(class_order)))
custom_colorscale_star = list("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale_star)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1),
axis.title.x = element_blank(),
legend.position = "none")
CYP2C19_stars <- CYP2C19_clin %>% drop_na(star_allele) %>% unique()
custom_colorscale_star = list("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale_star)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1),
axis.title.x = element_blank(),
legend.position = "none")
star_plot
# ggsave("../figures/cpic_classification_dots.png", height=8,width=10, plot=star_plot)
View(CYP2C19_stars)
star_order_capitol <- c("No function", "Decreased function", "Uncertain function", "Normal function")
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
scale_x_discrete(labels = star_order_capitol)+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale_star)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1),
axis.title.x = element_blank(),
legend.position = "none")
star_plot
custom_colorscale_star = list("possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
star_order_capitol <- c("No function", "Decreased function", "Normal function", "Uncertain function" )
set.seed(12346)
star_plot <- ggplot(CYP2C19_stars, aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score, color=classification, group=classification))+
geom_point(size=4,
alpha=0.75,
position = position_dodge2(width=0.3))+
geom_label_repel(mapping=aes(x=`Allele Clinical Functional Status (Required)`, y=abundance_score,label=star_allele),
color="black",
position=position_dodge2(width=0.3))+
scale_x_discrete(labels = star_order_capitol)+
ylim(0,1.1)+
scale_color_manual(values=custom_colorscale_star)+
labs(y="Abundance score")+
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1),
axis.title.x = element_blank(),
legend.position = "none")
star_plot
ggsave("../figures/cpic_classification_dots.png", height=8,width=10, plot=star_plot)
fig5 <- star_plot+gnomad_plot+plot_layout(guides="collect")
custom_colorscale = c("nonsense-like" = "#BB00FF","possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_decreased" = "#b3d9ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
class_order <- list("nonsense-like" = "nonsense-like",
"possibly_nonsense-like" = "possibly nonsense-like",
"decreased"="decreased",
"possibly_decreased" = "possibly decreased",
"possibly_wt-like" = "possibly wt-like",
"wt-like"="WT-like")
CYP2C19_clin_full_maf <- CYP2C19_clin_full %>%
drop_na(`Allele Frequency`)
gnomad_maf_plot <- ggplot(CYP2C19_clin_full_maf,aes(x=abundance_score, y=`Allele Frequency`, color=classification))+
geom_point(size=3, alpha=0.5)+
geom_smooth(method="lm", inherit.aes=FALSE, aes(x=abundance_score, y=`Allele Frequency`))+
stat_cor(inherit.aes=FALSE, aes(x=abundance_score, y=`Allele Frequency`),
size=5)+
scale_color_manual(values=custom_colorscale, labels=class_order)+
# scale_x_discrete(labels=class_order)+
scale_y_log10()+
labs(x="Abundance score")
gnomad_maf_plot
ggsave("../figures/clinical/gnomad_maf.png", height=6, width=9, plot=gnomad_maf_plot)
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts %>% filter(in_df == "both"), aes(label=count),
vjust=-0.3,
size=5)+
scale_x_discrete(labels = class_order_capitol)+
labs(y="Count")+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title.x = element_blank(),
legend.position="top")
CYP2C19_clin_full <- CYP2C19_clin_full %>%
mutate(classification = ifelse(is.na(classification),
case_when(str_detect(clinical_functional_annotation, "no_annotation") ~ "no_annotation",
str_detect(clinical_functional_annotation, "Decreased") ~ "decreased"),
classification),
type = ifelse(is.na(type), "missense", type))
class_order_capitol <- list("nonsense-like" = "Nonsense-like",
"possibly_nonsense-like" = "Possibly nonsense-like",
"decreased"="Decreased",
"possibly_decreased" = "Possibly decreased",
"possibly_wt-like" = "Possibly WT-like",
"wt-like"="WT-like")
CYP2C19_clin_counts <- CYP2C19_clin_full %>%
group_by(classification, in_df) %>%
filter(in_df != "dms_only") %>%
summarise(count=n()) %>%
mutate(classification = factor(classification, levels=names(class_order)))
CYP2C19_clin_counts_total <- CYP2C19_clin_full %>%
filter(in_df != "dms_only") %>%
group_by(classification) %>%
summarise(count=n())
custom_colorscale = c("nonsense-like" = "#BB00FF","possibly_nonsense-like" = "#A47EFF","decreased" = "#3366ff","possibly_decreased" = "#b3d9ff","possibly_wt-like" = "#ffcccc","wt-like" = "#F8766D")
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts %>% filter(in_df == "both"), aes(label=count),
vjust=-0.3,
size=5)+
scale_x_discrete(labels = class_order_capitol)+
labs(y="Count")+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title.x = element_blank(),
legend.position="top")
gnomad_plot
ggsave("../figures/clinical/gnomad_classification.png", height=7, width=5, plot=gnomad_plot)
fig5 <- star_plot+gnomad_plot+plot_layout(guides="collect")
fig5
ggsave(plot=fig5, "../figures/fig5.png", height=7, width=12)
ggsave(plot=fig5, "../figures/fig5.svg", height=7, width=12)
gnomad_plot <- ggplot(CYP2C19_clin_counts %>% filter(in_df == "both"), aes(x=classification, y=count, fill=classification))+
geom_col(fill="#0072B2")+
geom_text(data=CYP2C19_clin_counts %>% filter(in_df == "both"), aes(label=count),
vjust=-0.3,
size=5)+
scale_color_manual(values=custom_colorscale, labels=class_order)+
scale_x_discrete(labels = class_order_capitol)+
labs(y="Count")+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
axis.title.x = element_blank(),
legend.position="top")
gnomad_plot
## tidyverse 1.3.2 for ggplot, dplyr, data manipulation
if (!require(tidyverse)) install.packages('tidyverse')
library(tidyverse)
## gridExtra 2.3
if (!require(gridExtra)) install.packages('gridExtra')
library(gridExtra)
## cowplot 1.1.1 for separate plotting of legends
if (!require(cowplot)) install.packages('cowplot')
library(cowplot)
## ggrepel 0.9.1 for labeling points on plots
if (!require(ggrepel)) install.packages('ggrepel')
library(ggrepel)
## pheatmap 1.0.12 for hierarchical clustering and clustered heatmaps
if (!require(pheatmap)) install.packages('pheatmap')
library(pheatmap)
## GGally 2.1.2 for complex correlation plots
if (!require(GGally)) install.packages('GGally')
library(GGally)
## patchwork 1.1.1 for combining multiple plots
if (!require(patchwork)) install.packages('patchwork')
library(patchwork)
## zoo_1.8-10
if (!require(zoo)) install.packages('zoo')
library(zoo)
## ggpointdensity 0.1.0 for dot plots with density coloration
if (!require(ggpointdensity)) install.packages('ggpointdensity')
library(ggpointdensity)
## ggpubr 0.4.0 for correlation stats
if (!require(ggpubr)) install.packages('ggpubr')
library(ggpubr)
## ggdendro_0.1.23 for plotting dendrograms
if (!require(ggdendro)) install.packages('ggdendro')
library(ggdendro)
if (!require(ggplotify)) install.packages('ggplotify')
library(ggplotify)
theme_new = theme_set(theme_minimal(base_size=18))+
theme(axis.text.x= element_text(size=20),
axis.text.y = element_text(size=20))
# Define colorblind palette
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# Colors for homologous or divergent WT amino acids
# between CYP2C19 and 2C9
conserv_color <- list(homologous="#CC6666",
divergent="#9999CC")
colors <- list("CYP2C9" = "#D55E00",
"CYP2C19" = "#0072B2")
scatterplot_correlation_fxn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point(alpha = 0.05)
p
}
?facet_wrap
shift_corrplot_sweep <- ggplot(sweep_rep %>% filter(lasso_weight != "lasso_0.0005_shift_C19"), aes(x=Rep1, y=Rep2))+
geom_point(alpha=0.25)+
facet_wrap(~ lasso_weight,
ncol=2,
labeller = labeller(lasso_weight = lasso_names))+
stat_cor(size=6)+
geom_smooth(method="lm")+
labs(x= "Shift values\n(multidms replicate 1)",
y= "Shift values\n(multidms replicate 2)")
lasso_names <- c("lasso_0.0_shift_C19" = "Regularization weight 0.0",
"lasso_1e-06_shift_C19" = "Regularization weight 1e-06",
"lasso_1e-05_shift_C19" = "Regularization weight 1e-05",
"lasso_2e-05_shift_C19" = "Regularization weight 2e-05",
"lasso_5e-05_shift_C19" = "Regularization weight 5e-05",
"lasso_0.0001_shift_C19" = "Regularization weight 1e-04",
"lasso_0.0005_shift_C19" = "Regularization weight 5e-04")
shift_corrplot_sweep <- ggplot(sweep_rep %>% filter(lasso_weight != "lasso_0.0005_shift_C19"), aes(x=Rep1, y=Rep2))+
geom_point(alpha=0.25)+
facet_wrap(~ lasso_weight,
ncol=2,
labeller = labeller(lasso_weight = lasso_names))+
stat_cor(size=6)+
geom_smooth(method="lm")+
labs(x= "Shift values\n(multidms replicate 1)",
y= "Shift values\n(multidms replicate 2)")
shift_corrplot_sweep
shift_corrplot_sweep+rollsumofmean_sweep_plot
sweep_plot_assembled <- shift_corrplot_sweep+rollsumofmean_sweep_plot+plot_layout(design=sweep_layout)
sweep_layout <- "
#A
BB
"
sweep_plot_assembled <- shift_corrplot_sweep+rollsumofmean_sweep_plot+plot_layout(design=sweep_layout)
sweep_plot_assembled
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.png", height = 16, width=18)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.png", height = 18, width=18)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.svg", height = 18, width=18)
### Remove lasso of 0.0005 since most shifts are driven to zero by 0.0001
rollsumofmean_sweep_plot <- ggplot(sweep_position_mean %>% filter(lasso_weight != "lasso_0.0005_shift_C19"), aes(x=position, y=position_mean_shift))+
geom_line(data=rollsum_sweep  %>% filter(lasso_weight != "lasso_0.0005_shift_C19"), mapping=aes(x=position, y=rolling_sum), color="black", linewidth=1.5, alpha=0.5)+
geom_point(size=3, alpha=0.65)+
facet_wrap(~lasso_weight, labeller = labeller(lasso_weight = lasso_names)) +
scale_x_continuous(breaks = c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 490),
expand = c(0,0),
limits=c(1,490)) +
geom_hline(yintercept=0)+
labs(x="Position",
y="Mean shift value")+
theme(plot.margin = margin(0,0.5,0,0, "cm"),
legend.position = "none")
sweep_layout <- "
#A
BB
"
sweep_plot_assembled <- shift_corrplot_sweep+rollsumofmean_sweep_plot+plot_layout(design=sweep_layout)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.png", height = 18, width=18)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.svg", height = 18, width=18)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.png", height = 17, width=11)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.png", height = 8.5, width=11)
ggsave(plot=sweep_plot_assembled, "../figures/sweep_assembled.png", height = 18, width=18)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.png", height=8.5, width=11)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.svg", height=8.5, width=11)
# rollsumofmean_sweep_plot
ggsave(plot=rollsumofmean_sweep_plot, "../figures/rollsumofmean_sweep_plot.png", height=8.5, width=11)
# rollsumofmean_sweep_plot
ggsave(plot=rollsumofmean_sweep_plot, "../figures/rollsumofmean_sweep_plot.png", height=8, width=18)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.png", height=9, width=12)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.svg", height=9, width=12)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.png", height=12, width=9)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.png", height=11, width=8.5)
ggsave(plot = shift_corrplot_sweep, "../figures/sweep_shift_corrplot.png", height=10, width=9)
